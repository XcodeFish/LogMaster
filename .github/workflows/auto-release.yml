# .github/workflows/auto-release.yml
name: 自动版本发布

on:
  push:
    branches: [ main, release ]

jobs:
  auto-release:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'chore(release)') }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: 设置Git用户
        run: |
          git config --global user.name 'codefish'
          git config --global user.email 'passerby365@163.com'

      - name: 设置Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: 安装pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: 安装依赖
        run: pnpm install

      - name: 检查版本号
        id: version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "当前版本: $CURRENT_VERSION"

          TAG_EXISTS=$(git tag -l "v$CURRENT_VERSION")
          if [[ ! -z "$TAG_EXISTS" ]]; then
            echo "警告: 标签 v$CURRENT_VERSION 已存在"
            git tag -d "v$CURRENT_VERSION" || true
            git push origin --delete "v$CURRENT_VERSION" || true
            echo "已删除已存在的标签 v$CURRENT_VERSION"
          fi

          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: 自动版本发布
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)

          if [[ $COMMIT_MSG == *"BREAKING CHANGE"* ]]; then
            VERSION_TYPE="major"
          elif [[ $COMMIT_MSG == *"feat"* ]]; then
            VERSION_TYPE="minor"
          else
            VERSION_TYPE="patch"
          fi

          echo "发布 $VERSION_TYPE 版本"
          pnpm run release:$VERSION_TYPE

      - name: 推送变更
        run: |
          git pull --rebase --tags origin ${{ github.ref_name }}
          git push --follow-tags origin ${{ github.ref_name }}

      - name: 构建项目
        run: pnpm build

      - name: 发布到NPM
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
